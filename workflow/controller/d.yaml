apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-passing-
spec:
  entrypoint: artifact-example
  templates:
  - name: artifact-example
    dag:
      tasks:
      - name: generate-artifact
        template: whalesay
#      - name: consume-artifact
#        template: print-message
#        dependencies: [generate-artifact]
#        arguments:
#          artifacts:
#          - name: message
#            from: "{{tasks.generate-artifact.outputs.artifacts.hello-art}}"

  - name: whalesay
    container:
      image: docker/whalesay:latest
      command: [sh, -c]
      args: ["sleep 1; cowsay hello world | tee /tmp/hello_world.txt"]
    outputs:
      artifacts:
      - name: hello-art
        path: /tmp/hello_world.txt
        oss:
          endpoint: http://oss-cn-shanghai-internal.aliyuncs.com
          bucket: artifact-repository
          key: data/mydirectory/
          accessKeySecret:
            name: oss-credentials
            key: accessKey
          secretKeySecret:
            name: oss-credentials
            key: secretKey


  - name: print-message
#    inputs:
#      artifacts:
#      - name: message
#        path: /tmp/message
#        oss:
#          endpoint: http://oss-cn-shanghai-internal.aliyuncs.com
#          bucket: artifact-repository
#          key: data/mydirectory/
#          accessKeySecret:
#            name: oss-credentials
#            key: accessKey
#          secretKeySecret:
#            name: oss-credentials
#            key: secretKey
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cat /tmp/message"]